# CUDA only supports g++ <=4.8 at the time
CC=/usr/bin/g++-4.7 # This is the main compiler
#CC=clang --analyze # and comment out the linker last line for sanity

# Location of the CUDA Toolkit
CUDA_PATH="/usr/local/cuda"
NVCC=$(CUDA_PATH)/bin/nvcc -ccbin $(CC)

SRCDIR=src/main
BUILDDIR=build/main
TARGETDIR=bin
TARGET=$(TARGETDIR)/ffwdnet

TESTDIR=src/test
TESTBUILDDIR=build/test
TESTTARGET=$(TARGETDIR)/ffwdnet-test

SRCEXT=cpp
CUDAEXT=cu
# main file needs to be excluded from the test executable,
# because test runs have own main function provided by gtest_main library.
MAINFILE=main.$(SRCEXT)
# Application sources (no test sources).
CPPSOURCES=$(shell find $(SRCDIR) -type f -name *.$(SRCEXT))
CUDASOURCES=$(shell find $(SRCDIR) -type f -name *.$(CUDAEXT))
SOURCES=$(CPPSOURCES) $(CUDASOURCES)
# Test sources only.
TESTSOURCES=$(shell find $(TESTDIR) -type f -name *.$(SRCEXT))
# Application objects generated by compiler (no test objects).
OBJECTS=$(patsubst %.$(CUDAEXT),%.o,$(patsubst $(SRCDIR)/%,$(BUILDDIR)/%,$(SOURCES:.$(SRCEXT)=.o)))
# Application objects used to link against (no main object, no test objects).
LINKEDOBJECTS=$(shell echo $(OBJECTS) | sed -e s@$(BUILDDIR)/$(MAINFILE:.$(SRCEXT)=.o)@@)
# Test objects generated by compiler from test sources only.
TESTOBJECTS=$(patsubst $(TESTDIR)/%,$(TESTBUILDDIR)/%,$(TESTSOURCES:.$(SRCEXT)=.o))
# All objects needed for tests to run
# (test objects and those we are linking against).
TSOBJECTS=$(TESTOBJECTS) $(LINKEDOBJECTS)

CFLAGS=-g -std=c++11 # -Wall
LIB=-llog4cpp -lgtest -lgtest_main -lcurand -lcublas #-pthread
INC= #-Iinclude
TESTINC=-Isrc/main

all: $(TARGET) $(TESTTARGET)

$(TARGET): $(OBJECTS)
	@echo $(OBJECTS)
	@echo $(LINKEDOBJECTS)
	@echo "Linking..."
	@mkdir -p $(TARGETDIR)
	$(NVCC) $^ -o $(TARGET) $(LIB)

$(TESTTARGET): $(TSOBJECTS)
	@echo "Linking tests..."
	@mkdir -p $(TARGETDIR)
	$(NVCC) $^ -o $(TESTTARGET) $(LIB)

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(SRCEXT)
	@echo "Building c++ code..."
	@mkdir -p $(BUILDDIR) $(shell dirname $@)
	$(NVCC) $(CFLAGS) $(INC) -c -o $@ $<

$(BUILDDIR)/%.o: $(SRCDIR)/%.$(CUDAEXT)
	@echo "Building cuda code..."
	@mkdir -p $(BUILDDIR) $(shell dirname $@)
	$(NVCC) $(CFLAGS) $(INC) -c -o $@ $<

$(TESTBUILDDIR)/%.o: $(TESTDIR)/%.$(SRCEXT)
	@echo "Building tests..."
	@mkdir -p $(TESTBUILDDIR) $(shell dirname $@)
	$(NVCC) $(CFLAGS) $(TESTINC) -c -o $@ $<

clean:
	@echo " Cleaning..."; 
	$(RM) -r $(BUILDDIR) $(TARGETDIR) $(TESTBUILDDIR)

